apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kafka0
  name: kafka0
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: kafka0
    spec:
      containers:
      - env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: LISTENER_ALICE://localhost:31003,LISTENER_BOB://kafka0:31005
        - name: KAFKA_CREATE_TOPICS
          value: NotificationTopic:1:1
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: LISTENER_BOB
        - name: KAFKA_LISTENERS
          value: LISTENER_ALICE://:9092,LISTENER_BOB://:31005
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: LISTENER_BOB:PLAINTEXT, LISTENER_ALICE:PLAINTEXT
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        image: wurstmeister/kafka:latest
        name: kafka
        ports:
        - containerPort: 9092
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: kafka0-claim0
      hostname: kafka0
      restartPolicy: Always
      volumes:
      - name: kafka0-claim0
        persistentVolumeClaim:
          claimName: kafka0-claim0
  selector:
    matchLabels:
      io.kompose.service: kafka0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: kafka0-claim0
  name: kafka0-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi