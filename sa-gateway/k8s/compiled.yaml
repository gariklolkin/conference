apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  ports:
  - name: "8082"
    nodePort: 31001
    port: 8082
    targetPort: 8082
  selector:
    io.kompose.service: api-gateway
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: eureka-server
  name: eureka-server
spec:
  ports:
  - name: "8761"
    nodePort: 31000
    port: 8761
    targetPort: 8761
  selector:
    io.kompose.service: eureka-server
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: sponsorship-db
  name: sponsorship-db
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    io.kompose.service: sponsorship-db
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: sponsorship-service
  name: sponsorship-service
spec:
  ports:
  - name: "8080"
    nodePort: 31002
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: sponsorship-service
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: api-gateway
    spec:
      containers:
      - env:
        - name: EUREKA_INSTANCE_PREFERIPADDRESS
          value: "true"
        - name: EUREKA_CLIENT_FETCH_REGISTRY
          value: "true"
        - name: EUREKA_CLIENT_REGISTER_WITH_EUREKA
          value: "true"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: http://eureka-server:8761/eureka
        image: sanek555/api-gateway:latest
        name: api-gateway
        ports:
        - containerPort: 8082
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: eureka-server
  name: eureka-server
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: eureka-server
    spec:
      containers:
      - image: taskbeez/eureka-server:master
        name: eureka-server
        ports:
        - containerPort: 8761
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: sponsorship-db
  name: sponsorship-db
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: sponsorship-db
    spec:
      containers:
      - image: postgres
        name: sponsorship-db
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      restartPolicy: Always
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-data
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: sponsorship-service
  name: sponsorship-service
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.19.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: sponsorship-service
    spec:
      containers:
      - env:
        - name: EUREKA_INSTANCE_PREFERIPADDRESS
          value: "true"
        - name: EUREKA_CLIENT_FETCH_REGISTRY
          value: "true"
        - name: EUREKA_CLIENT_REGISTER_WITH_EUREKA
          value: "true"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: http://eureka-server:8761/eureka
        - name: SPONSORSHIP_DB_HOST
          value: sponsorship-db
        - name: SPONSORSHIP_DB_NAME
          value: postgres
        - name: SPONSORSHIP_DB_PASSWORD
          value: postgres
        - name: SPONSORSHIP_DB_PORT
          value: "5432"
        - name: SPONSORSHIP_DB_USERNAME
          value: postgres
        - name: SPONSORSHIP_SERVICE_PORT
          value: "8080"
        image: sanek555/sponsorship:1
        name: sponsorship-service
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: db-data
  name: db-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
